@model DataVizNavigator1.Models.ChartViewModel
@{
    ViewData["Title"] = "Edit Chart";
}

<h1>Edit Chart - @Model.Name</h1>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Edit Chart Properties</h5>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post">
                    <input type="hidden" asp-for="Id" />

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="Name" class="control-label">Chart Name</label>
                        <input asp-for="Name" class="form-control" required />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-3">
                        <label asp-for="MappingId">Dataset</label>
                        <select asp-for="MappingId" class="form-control" id="MappingId">
                            @foreach (var mapping in Model.AvailableMappings)
                            {
                                <option value="@mapping.Id">@mapping.Name</option>
                            }
                        </select>
                        <span asp-validation-for="MappingId" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-3">
                        <label asp-for="ChartType">Chart Type</label>
                        <select asp-for="ChartType" class="form-control">
                            <option value="bar">Bar Chart</option>
                            <option value="line">Line Chart</option>
                            <option value="pie">Pie Chart</option>
                            <option value="scatter">Scatter Plot</option>
                        </select>
                        <span asp-validation-for="ChartType" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-3">
                        <label asp-for="XAxisColumn">X-Axis Column</label>
                        <select asp-for="XAxisColumn" class="form-control" id="XAxisColumn">
                            @if (Model.AvailableColumns != null)
                            {
                                foreach (var column in Model.AvailableColumns)
                                {
                                    <option value="@column">@column</option>
                                }
                            }
                        </select>
                        <span asp-validation-for="XAxisColumn" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-3">
                        <label asp-for="YAxisColumn">Y-Axis Column</label>
                        <select asp-for="YAxisColumn" class="form-control" id="YAxisColumn">
                            @if (Model.AvailableColumns != null)
                            {
                                foreach (var column in Model.AvailableColumns)
                                {
                                    <option value="@column">@column</option>
                                }
                            }
                        </select>
                        <span asp-validation-for="YAxisColumn" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-4">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                        <a asp-action="Saved" class="btn btn-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Chart Preview</h5>
            </div>
            <div class="card-body">
                <canvas id="chartPreview" style="min-height: 300px;"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let chart = null;

        $(document).ready(function() {
            // Populate columns when a dataset is selected
            $('#MappingId').change(function() {
                const mappingId = $(this).val();
                if (mappingId) {
                    $.ajax({
                        url: '@Url.Action("GetColumns", "Charts")/' + mappingId,
                        type: 'GET',
                        success: function(data) {
                            populateColumnDropdowns(data);
                        },
                        error: function() {
                            alert('Error fetching columns');
                        }
                    });
                } else {
                    clearColumnDropdowns();
                }
            });

            // Auto-generate preview when any field changes
            $('#ChartType, #XAxisColumn, #YAxisColumn').change(function() {
                generatePreview();
            });

            // Initial preview
            generatePreview();
        });

        function populateColumnDropdowns(columns) {
            const xAxisSelect = $('#XAxisColumn');
            const yAxisSelect = $('#YAxisColumn');

            // Store current selections if possible
            const currentX = xAxisSelect.val();
            const currentY = yAxisSelect.val();

            xAxisSelect.empty();
            yAxisSelect.empty();

            columns.forEach(function(column) {
                xAxisSelect.append(`<option value="${column}">${column}</option>`);
                yAxisSelect.append(`<option value="${column}">${column}</option>`);
            });

            // Try to restore previous selections
            if (columns.includes(currentX)) {
                xAxisSelect.val(currentX);
            }

            if (columns.includes(currentY)) {
                yAxisSelect.val(currentY);
            }

            // Generate preview with new columns
            generatePreview();
        }

        function clearColumnDropdowns() {
            $('#XAxisColumn').empty();
            $('#YAxisColumn').empty();
        }

        function generatePreview() {
            const formData = {
                MappingId: $('#MappingId').val(),
                ChartType: $('#ChartType').val(),
                XAxisColumn: $('#XAxisColumn').val(),
                YAxisColumn: $('#YAxisColumn').val()
            };

            if (!formData.MappingId || !formData.XAxisColumn || !formData.YAxisColumn) {
                return; // Skip if we don't have all data yet
            }

            $.ajax({
                url: '@Url.Action("GenerateChart", "Charts")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        renderChart(response.chartData, formData.ChartType);
                    }
                },
                error: function() {
                    console.error('Error generating chart preview');
                }
            });
        }

        function renderChart(chartData, chartType) {
            const ctx = document.getElementById('chartPreview').getContext('2d');

            if (chart) {
                chart.destroy();
            }

            const data = JSON.parse(chartData);

            chart = new Chart(ctx, {
                type: chartType,
                data: data,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
    </script>
}